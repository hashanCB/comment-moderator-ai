{"code":"import { __awaiter, __generator } from \"tslib\";\r\nvar CommentChecker = /** @class */ (function () {\r\n    function CommentChecker(apiKey, model) {\r\n        if (model === void 0) { model = 'deepseek/deepseek-chat-v3-0324:free'; }\r\n        this.model = model;\r\n        if (!apiKey) {\r\n            throw new Error('OpenRouter API key is required');\r\n        }\r\n        this.apiKey = apiKey;\r\n    }\r\n    CommentChecker.prototype.escapePrompt = function (input) {\r\n        return input.replace(/[\"\\\\]/g, '\\\\$&');\r\n    };\r\n    CommentChecker.prototype.checkComment = function (_a) {\r\n        var _b, _c, _d, _e, _f, _g, _h, _j;\r\n        var comment = _a.comment, _k = _a.context, context = _k === void 0 ? '' : _k, _l = _a.threshold, threshold = _l === void 0 ? 0.7 : _l;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var sanitizedContext, prompt_1, response, data, content, lines, approved, reason, confidence, error_1;\r\n            return __generator(this, function (_m) {\r\n                switch (_m.label) {\r\n                    case 0:\r\n                        _m.trys.push([0, 3, , 4]);\r\n                        if (!(comment === null || comment === void 0 ? void 0 : comment.trim())) {\r\n                            return [2 /*return*/, {\r\n                                    approved: false,\r\n                                    reason: 'Comment is required',\r\n                                    confidence: 0\r\n                                }];\r\n                        }\r\n                        sanitizedContext = context.slice(0, 1000);\r\n                        prompt_1 = sanitizedContext\r\n                            ? \"Context: \".concat(this.escapePrompt(sanitizedContext), \"\\n\\nModerate the following comment: \\\"\").concat(this.escapePrompt(comment), \"\\\"\\n\\nConsider:\\n1. Is it appropriate and relevant to the context? (Yes/No)\\n2. Is it respectful and constructive? (Yes/No)\\n3. Does it contain harmful content? (Yes/No)\\n\\nConfidence threshold: \").concat(threshold * 100, \"%\\n\\nRespond with:\\nAPPROVED: Yes/No\\nREASON: <detailed reason>\\nCONFIDENCE: <score between 0-1>\")\r\n                            : \"Moderate the following comment: \\\"\".concat(this.escapePrompt(comment), \"\\\"...\");\r\n                        return [4 /*yield*/, fetch('https://openrouter.ai/api/v1/chat/completions', {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                    'Authorization': \"Bearer \".concat(this.apiKey),\r\n                                    'Content-Type': 'application/json',\r\n                                    'HTTP-Referer': 'https://github.com/livehashan/comment-check',\r\n                                },\r\n                                body: JSON.stringify({\r\n                                    model: this.model,\r\n                                    messages: [\r\n                                        {\r\n                                            role: 'system',\r\n                                            content: 'You are a comment moderation assistant. Analyze comments and respond in the exact format: APPROVED: Yes/No\\nREASON: <reason>\\nCONFIDENCE: <0-1>'\r\n                                        },\r\n                                        {\r\n                                            role: 'user',\r\n                                            content: prompt_1\r\n                                        }\r\n                                    ],\r\n                                    temperature: 0.3\r\n                                })\r\n                            })];\r\n                    case 1:\r\n                        response = _m.sent();\r\n                        if (!response.ok) {\r\n                            throw new Error('Failed to get response from OpenRouter');\r\n                        }\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 2:\r\n                        data = _m.sent();\r\n                        content = (_c = (_b = data.choices[0]) === null || _b === void 0 ? void 0 : _b.message) === null || _c === void 0 ? void 0 : _c.content;\r\n                        if (!content) {\r\n                            throw new Error('No response content from OpenRouter');\r\n                        }\r\n                        lines = content.trim().split('\\n');\r\n                        approved = ((_e = (_d = lines.find(function (line) { return line.startsWith('APPROVED:'); })) === null || _d === void 0 ? void 0 : _d.split(':')[1]) === null || _e === void 0 ? void 0 : _e.trim()) === 'Yes';\r\n                        reason = ((_g = (_f = lines.find(function (line) { return line.startsWith('REASON:'); })) === null || _f === void 0 ? void 0 : _f.split(':')[1]) === null || _g === void 0 ? void 0 : _g.trim()) || 'No reason provided';\r\n                        confidence = parseFloat(((_j = (_h = lines.find(function (line) { return line.startsWith('CONFIDENCE:'); })) === null || _h === void 0 ? void 0 : _h.split(':')[1]) === null || _j === void 0 ? void 0 : _j.trim()) || '0');\r\n                        return [2 /*return*/, { approved: approved, reason: reason, confidence: confidence }];\r\n                    case 3:\r\n                        error_1 = _m.sent();\r\n                        console.error('Error:', error_1);\r\n                        return [2 /*return*/, {\r\n                                approved: false,\r\n                                reason: 'Service error',\r\n                                confidence: 0\r\n                            }];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return CommentChecker;\r\n}());\r\nexport { CommentChecker };\r\n// Next.js route handler\r\nexport function createNextRouteHandler(apiKey, model) {\r\n    var checker = new CommentChecker(apiKey, model);\r\n    return function handler(req) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var body, result, error_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (req.method !== 'POST') {\r\n                            return [2 /*return*/, new Response('Method not allowed', { status: 405 })];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 5]);\r\n                        return [4 /*yield*/, req.json()];\r\n                    case 2:\r\n                        body = _a.sent();\r\n                        return [4 /*yield*/, checker.checkComment(body)];\r\n                    case 3:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, new Response(JSON.stringify(result), {\r\n                                headers: { 'Content-Type': 'application/json' }\r\n                            })];\r\n                    case 4:\r\n                        error_2 = _a.sent();\r\n                        console.error('Error:', error_2);\r\n                        return [2 /*return*/, new Response(JSON.stringify({\r\n                                approved: false,\r\n                                reason: 'Service error',\r\n                                confidence: 0\r\n                            }), {\r\n                                status: 500,\r\n                                headers: { 'Content-Type': 'application/json' }\r\n                            })];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n}\r\n// Express middleware\r\nexport function createExpressMiddleware(apiKey, model) {\r\n    var checker = new CommentChecker(apiKey, model);\r\n    return function middleware(req, res) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result, error_3;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, checker.checkComment(req.body)];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        res.json(result);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_3 = _a.sent();\r\n                        console.error('Error:', error_3);\r\n                        res.status(500).json({\r\n                            approved: false,\r\n                            reason: 'Service error',\r\n                            confidence: 0\r\n                        });\r\n                        return [3 /*break*/, 3];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n}\r\n//# sourceMappingURL=index.js.map","references":[],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/api/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/Hashan/Documents/untitled folder/aicomment/comment-check/node_modules/.cache/rollup-plugin-typescript2/placeholder/api/index.d.ts","writeByteOrderMark":false,"text":"export interface CommentCheckRequest {\r\n    comment: string;\r\n    context?: string;\r\n    threshold?: number;\r\n}\r\nexport interface CommentCheckResponse {\r\n    approved: boolean;\r\n    reason: string;\r\n    confidence: number;\r\n}\r\nexport declare class CommentChecker {\r\n    private model;\r\n    private apiKey;\r\n    constructor(apiKey: string, model?: string);\r\n    private escapePrompt;\r\n    checkComment({ comment, context, threshold }: CommentCheckRequest): Promise<CommentCheckResponse>;\r\n}\r\nexport declare function createNextRouteHandler(apiKey: string, model?: string): (req: Request) => Promise<Response>;\r\nexport declare function createExpressMiddleware(apiKey: string, model?: string): (req: any, res: any) => Promise<void>;\r\n"}}
