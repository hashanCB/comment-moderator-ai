{"code":"import { __assign, __awaiter, __generator } from \"tslib\";\r\nimport { useState, useCallback, useRef, useEffect } from 'react';\r\nvar debounce = require('lodash.debounce');\r\nexport function useCommentCheck(options) {\r\n    var _this = this;\r\n    if (options === void 0) { options = {}; }\r\n    var _a = options.context, context = _a === void 0 ? '' : _a, _b = options.threshold, threshold = _b === void 0 ? 0.7 : _b, _c = options.apiEndpoint, apiEndpoint = _c === void 0 ? '/api/check-comment' : _c, _d = options.debounceMs, debounceMs = _d === void 0 ? 500 : _d;\r\n    var _e = useState(false), isLoading = _e[0], setIsLoading = _e[1];\r\n    var _f = useState(null), result = _f[0], setResult = _f[1];\r\n    var contextRef = useRef(context);\r\n    var debouncedFnRef = useRef(null);\r\n    // Update context if it changes\r\n    useEffect(function () {\r\n        contextRef.current = context;\r\n    }, [context]);\r\n    var checkComment = useCallback(function (commentText) { return __awaiter(_this, void 0, void 0, function () {\r\n        var response, data, result_1, err_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!(commentText === null || commentText === void 0 ? void 0 : commentText.trim())) {\r\n                        setResult({\r\n                            approved: false,\r\n                            reason: 'Comment cannot be empty',\r\n                            confidence: 0\r\n                        });\r\n                        return [2 /*return*/];\r\n                    }\r\n                    setIsLoading(true);\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 4, 5, 6]);\r\n                    return [4 /*yield*/, fetch(apiEndpoint, {\r\n                            method: 'POST',\r\n                            headers: { 'Content-Type': 'application/json' },\r\n                            body: JSON.stringify({\r\n                                comment: commentText,\r\n                                context: contextRef.current,\r\n                                threshold: threshold\r\n                            })\r\n                        })];\r\n                case 2:\r\n                    response = _a.sent();\r\n                    return [4 /*yield*/, response.json()];\r\n                case 3:\r\n                    data = _a.sent();\r\n                    if (!response.ok) {\r\n                        throw new Error(data.reason || 'Failed to check comment');\r\n                    }\r\n                    result_1 = __assign(__assign({}, data), { stats: {\r\n                            length: commentText.length,\r\n                            words: commentText.trim().split(/\\s+/).length\r\n                        } });\r\n                    setResult(result_1);\r\n                    return [2 /*return*/, result_1];\r\n                case 4:\r\n                    err_1 = _a.sent();\r\n                    console.error('Error checking comment:', err_1);\r\n                    setResult({\r\n                        approved: false,\r\n                        reason: 'Failed to check comment. Please try again.',\r\n                        confidence: 0\r\n                    });\r\n                    return [3 /*break*/, 6];\r\n                case 5:\r\n                    setIsLoading(false);\r\n                    return [7 /*endfinally*/];\r\n                case 6: return [2 /*return*/];\r\n            }\r\n        });\r\n    }); }, [apiEndpoint, threshold]);\r\n    // Initialize debounced function\r\n    useEffect(function () {\r\n        var debouncedFn = debounce(function (text) { return __awaiter(_this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, checkComment(text)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); }, debounceMs);\r\n        debouncedFnRef.current = debouncedFn;\r\n        return function () {\r\n            var _a, _b;\r\n            if (debouncedFnRef.current) {\r\n                // @ts-ignore - debounce types don't include cancel\r\n                (_b = (_a = debouncedFnRef.current).cancel) === null || _b === void 0 ? void 0 : _b.call(_a);\r\n            }\r\n        };\r\n    }, [checkComment, debounceMs]);\r\n    var debouncedCheck = useCallback(function (text) {\r\n        var _a;\r\n        if (!text)\r\n            return;\r\n        (_a = debouncedFnRef.current) === null || _a === void 0 ? void 0 : _a.call(debouncedFnRef, text);\r\n    }, []);\r\n    return {\r\n        isLoading: isLoading,\r\n        result: result,\r\n        checkComment: checkComment,\r\n        debouncedCheck: debouncedCheck\r\n    };\r\n}\r\n//# sourceMappingURL=index.js.map","references":["/Users/Hashan/Documents/untitled folder/aicomment/comment-check/node_modules/@types/react/ts5.0/index.d.ts","/Users/Hashan/Documents/untitled folder/aicomment/comment-check/node_modules/@types/lodash.debounce/index.d.ts","/Users/Hashan/Documents/untitled folder/aicomment/comment-check/src/api/index.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/hook/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/Hashan/Documents/untitled folder/aicomment/comment-check/node_modules/.cache/rollup-plugin-typescript2/placeholder/hook/index.d.ts","writeByteOrderMark":false,"text":"import type { CommentCheckResponse } from '../api';\r\ninterface CommentCheckOptions {\r\n    context?: string;\r\n    threshold?: number;\r\n    debounceMs?: number;\r\n    apiEndpoint?: string;\r\n}\r\nexport declare function useCommentCheck(options?: CommentCheckOptions): {\r\n    isLoading: boolean;\r\n    result: CommentCheckResponse | null;\r\n    checkComment: (commentText: string) => Promise<any>;\r\n    debouncedCheck: (text: string) => void;\r\n};\r\nexport {};\r\n"}}
